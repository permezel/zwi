#
# thrashing about wildly trying to get some tests....
#
image: python:3.9-alpine3.14

stages:          # List of stages for jobs, and their order of execution
  - build
  - test
  - deploy

# Change pip's cache directory to be inside the project directory since we can
# only cache local items.
variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"

# Pip's cache doesn't store the python packages
# https://pip.pypa.io/en/stable/reference/pip_install/#caching
#
# If you want to also cache the installed packages, you have to install
# them in a virtualenv and cache it as well.
cache:
  paths:
    - .cache/pip
    - venv/

before_script:
  - python -V  # Print out python version for debugging
  - pip install virtualenv
  - virtualenv venv
  - source venv/bin/activate

build-job:       # This job runs in the build stage, which runs first.
  stage: build
  script:
    - echo "Compiling the code..."
    - echo "Compile complete."

test:
  stage: test
  script:
    - echo python setup.py test
    - echo pip install tox flake8  # you can also use tox
    - echo tox -e py36,flake8
    - echo pytest --junitxml=report.xml
    - touch report.xml
  artifacts:
    when: always
    reports:
      junit: report.xml

pages:
  script:
    - echo pip install sphinx sphinx-rtd-theme
    - echo 'cd doc ; make html'
    - echo mv build/html/ ../public/
  artifacts:
    paths:
      - public
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH

deploy-job:      # This job runs in the deploy stage.
  stage: deploy  # It only runs when *both* jobs in the test stage complete successfully.
  script:
    - echo "Deploying application..."
    - echo "Application successfully deployed."
